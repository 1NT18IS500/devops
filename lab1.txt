Task 1:(change version name and dev or app(eg) in valkyrie-x and see the step line also)

gcloud source repos clone valkyrie-app  //write as per given in ques
cd valkyrie-app
cat > Dockerfile <<EOF
FROM golang:1.10
WORKDIR /go/src/app
COPY source .
RUN go install -v
ENTRYPOINT ["app","-single=true","-port=8080"]
EOF
docker build -t valkyrie-app:v0.0.3 .
cd ..
cd marking
./step1_v2.sh



task 2(as it is in 1 se command line problems also)
cd ..
cd valkyrie-app
docker run -p 8080:8080 valkyrie-app:v0.0.3 &
cd ..
cd marking
./step2_v2.sh





task 3(tag name and version)	// make it dev or app(whatever given) +gcr.io/... given
cd ..
cd valkyrie-app
docker tag valkyrie-app:v0.0.3 gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.3
docker push gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.3
sed -i s#IMAGE_HERE#gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.3#g k8s/deployment.yaml


task 4 (directory issues)	//gcr.io/... given as in task 3	
sed -i s#IMAGE_HERE#gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.3#g k8s/deployment.yaml
gcloud container clusters get-credentials valkyrie-dev --zone us-east1-d		// no change in valkyrie-dev
kubectl create -f k8s/deployment.yaml
kubectl create -f k8s/service.yaml

git merge origin/kurt-dev




task5:(insert replicas) // no changes
kubectl edit deployment valkyrie-dev
Press "i" to get into insert mode and change "replicas" from 1 to 3. Press "Esc" -> ":wq" -> Enter to exit Vim.






Task 6(version)	//same as tsk 3 (gcr.io/... given + new version given)
docker build -t gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.4 .
docker push gcr.io/$GOOGLE_CLOUD_PROJECT/valkyrie-app:v0.0.4
kubectl edit deployment valkyrie-dev

Press 'i' to edit and change image to "image: gcr.io/YOUR_PROJECT_ID/valkyrie-app:v0.0.2". Press "Esc" -> ":wq" -> Enter


docker ps
(gives container id)


task 7(container id from cmd)
docker kill 3a7cb44f5f10

export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/component=jenkins-master" -l "app.kubernetes.io/instance=cd" -o jsonpath="{.items[0].metadata.name}")
kubectl port-forward $POD_NAME 8080:8080 >> /dev/null &
printf $(kubectl get secret cd-jenkins -o jsonpath="{.data.jenkins-admin-password}" | base64 --decode);echo      

gcloud source repos list

Open Jenkins Web View -> Preview on port 8080
   Username : admin
   Password : {Code output from previous command}


Go through the following:

-> Manage Jenkins -> Manage Credentials -> Global -> add credentials -> Kind: Google Service Account from metadata -> OK

-> Jenkins -> New Item -> Name : valkyrie-app -> Pipeline -> OK

-> Pipeline -> Script: Pipeline script from SCM -> SCM: Git

-> Repository URL: {Url from previous command} -> Credentials: {Project id}

-> Apply -> Save



sed -i "s/green/orange/g" source/html.go

sed -i "s/YOUR_PROJECT/$GOOGLE_CLOUD_PROJECT/g" Jenkinsfile
git config --global user.email "student-02-49edf395a0eb@qwiklabs.net"        
git config --global user.name "student-02-49edf395a0eb"                       
git add .
git commit -m "built pipeline init"
git push

In Jenkins click Build and wait to get score.